{"version":3,"file":"RwCarousel2.stories.40e0b178.js","sources":["../../src/components/RwCarousel/RwCarousel2.vue","../../stories/RwCarousel2.stories.mdx"],"sourcesContent":["<script setup lang=\"ts\">\n\nimport {\n  computed, nextTick, onBeforeMount, onMounted, ref, watch,\n} from 'vue';\nimport { useDebounceFn } from '@vueuse/core';\nimport RwCarouselItem from './RwCarouselItem.vue';\nimport RwCarouselItemMock from './RwCarouselItemMock.vue';\nimport { RwCarouselAutoplayOptions } from './types';\n\ntype RwCarouselItemRef = InstanceType<typeof RwCarouselItem>;\n\nconst props = withDefaults(defineProps<{\n  items: unknown[],\n  vertical?: boolean,\n  infinite?: boolean,\n  showScroll?: boolean,\n  autoplay?: boolean | RwCarouselAutoplayOptions,\n  maxVisible?: number,\n  notVisibleOffset?: string,\n  showDots?: boolean,\n  showButtons?: boolean,\n  scrollByDrag?: boolean,\n  centered?: boolean,\n}>(), {\n  vertical: false,\n  infinite: false,\n  showScroll: false,\n  autoplay: false,\n  maxVisible: undefined,\n  notVisibleOffset: undefined,\n  showDots: true,\n  showButtons: true,\n  scrollByDrag: true,\n  centered: false,\n});\n\nconst slidesRef = ref<RwCarouselItemRef[]>();\nconst scrollerElementRef = ref<HTMLDivElement>();\n\nconst orderedSlides = ref<{ itemIndex: number, isCopy: boolean }[]>([]);\n\nconst visibleSlides = ref<Record<number, boolean>>({});\nconst visibleItemsCountWithoutMocks = ref(0);\n\nconst mocksCount = ref(0);\n\nconst loading = ref(true);\nconst mocksLoading = ref(true);\nconst leftVisibleMocks = ref<Record<number, boolean>>({});\nconst rightVisibleMocks = ref<Record<number, boolean>>({});\nconst itemWidth = ref(0);\nconst isFirstSlideVisible = computed(() => Boolean(visibleSlides.value[0]));\nconst isLastSlideVisible = computed(() => Boolean(visibleSlides.value[props.items.length - 1]));\n\nconst focusedSlideIndex = ref();\n\nconst scrollerStyle = computed(() => {\n  const offset = props.notVisibleOffset || '0px';\n  const gridStyle = props.maxVisible ? `calc((100% / ${props.maxVisible}) - ${offset})` : 'auto';\n  const cursor = props.scrollByDrag ? 'grab' : 'auto';\n\n  if (props.vertical) {\n    return {\n      width: '100%',\n      gridAutoRows: gridStyle,\n      cursor,\n    };\n  }\n\n  return {\n    gridAutoColumns: gridStyle,\n    cursor,\n  };\n});\n\nconst slideStyle = computed(() => {\n  if (props.vertical) {\n    return {\n      height: `${itemWidth.value}px`,\n    };\n  }\n\n  return {\n    width: `${itemWidth.value}px`,\n  };\n});\n\nfunction setSlideVisibility(data: { visible: boolean, index: number, isCopy: boolean }) {\n  if (loading.value && data.isCopy) {\n    return;\n  }\n\n  if (data.visible) {\n    visibleSlides.value[data.index] = true;\n  } else {\n    delete visibleSlides.value[data.index];\n  }\n}\n\nfunction setMockVisibility(data: { visible: boolean, index: number, position: 'left' | 'right' }) {\n  if (data.visible) {\n    if (data.position === 'left') {\n      leftVisibleMocks.value[data.index] = true;\n    } else {\n      rightVisibleMocks.value[data.index] = true;\n    }\n  } else if (data.position === 'left') {\n    delete leftVisibleMocks.value[data.index];\n  } else {\n    delete rightVisibleMocks.value[data.index];\n  }\n}\n\nconst calculateMocksCount = () => {\n  if (loading.value) {\n    mocksCount.value = Math.floor(visibleItemsCountWithoutMocks.value / 2);\n  }\n\n  mocksLoading.value = false;\n};\n\nconst detectFocusedSlide = useDebounceFn(async ({ leftMocks, visibleItems, rightMocks }: any) => {\n  const result: { visible: boolean, type: string, index: number }[] = [];\n\n  calculateMocksCount();\n\n  if (Object.keys(leftMocks).length) {\n    for (let i = 0; i < mocksCount.value; i += 1) {\n      result.push({\n        index: i,\n        type: 'mock',\n        visible: leftMocks[i],\n      });\n    }\n  }\n\n  props.items.forEach((item, index) => result.push({\n    index: Number(index),\n    type: 'slide',\n    visible: visibleItems[index],\n  }));\n\n  if (Object.keys(rightMocks).length) {\n    for (let i = 0; i < mocksCount.value; i += 1) {\n      result.push({\n        index: i,\n        type: 'mock',\n        visible: rightMocks[i],\n      });\n    }\n  }\n\n  const visible = result.filter((item) => item.visible);\n\n  if (visible.length) {\n    let visibleSlideIndex = Math.ceil(visible.length / 2);\n\n    while (visible[visibleSlideIndex].type !== 'slide') {\n      visibleSlideIndex += 1;\n    }\n\n    focusedSlideIndex.value = visible[visibleSlideIndex].index;\n  }\n\n  if (loading.value) {\n    await nextTick();\n\n    if (slidesRef.value?.length) {\n      const index = orderedSlides.value.findIndex((item) => item.itemIndex === 0 && !item.isCopy);\n\n      if (index > -1) {\n        slidesRef.value[index].$el.scrollIntoView({ block: 'start', inline: 'start' });\n      }\n    }\n  }\n\n  loading.value = false;\n}, 200);\n\nconst calculateOrderedSlides = () => {\n  let slidesArray = props.items.map((item, itemIndex) => ({\n    itemIndex,\n    isCopy: false,\n  }));\n\n  if (!props.centered && props.infinite) {\n    if (loading.value || isFirstSlideVisible.value) {\n      slidesArray = [\n        ...slidesArray.map((slide) => ({ ...slide, isCopy: true })),\n        ...slidesArray,\n      ];\n    }\n  }\n\n  orderedSlides.value = slidesArray;\n};\n\nonBeforeMount(() => {\n  calculateOrderedSlides();\n});\n\nonMounted(() => {\n  if (slidesRef.value?.length) {\n    itemWidth.value = props.vertical\n      ? slidesRef.value[0].$el.clientHeight\n      : slidesRef.value[0].$el.clientWidth;\n\n    visibleItemsCountWithoutMocks.value = props.vertical\n      ? Math.floor(window.innerHeight / itemWidth.value)\n      : Math.floor(window.innerWidth / itemWidth.value);\n\n    detectFocusedSlide({\n      leftMocks: leftVisibleMocks.value,\n      visibleItems: visibleSlides.value,\n      rightMocks: rightVisibleMocks.value,\n    });\n  }\n});\n\nwatch(\n  () => [leftVisibleMocks.value, visibleSlides.value, rightVisibleMocks.value],\n  ([leftMocks, visibleItems, rightMocks]) => {\n    calculateOrderedSlides();\n\n    detectFocusedSlide({ leftMocks, visibleItems, rightMocks });\n  },\n  { deep: true, flush: 'post' },\n);\n</script>\n\n<template>\n  <div\n    :class=\"[\n      'rw-carousel',\n      {\n        vertical,\n        'hide-scrollbar': !showScroll,\n        loading,\n        centered,\n      },\n    ]\"\n  >\n    <div class=\"rw-carousel__container\">\n      <div\n        class=\"scroller\"\n        ref=\"scrollerElementRef\"\n        :style=\"scrollerStyle\"\n      >\n        <template v-if=\"!mocksLoading && centered && mocksCount\">\n          <RwCarouselItemMock\n            v-for=\"index in mocksCount\"\n            :key=\"index\"\n            :style=\"slideStyle\"\n            @visibility-change=\"(visible) => setMockVisibility({ visible, index, position: 'left' })\"\n          />\n        </template>\n\n        <RwCarouselItem\n          v-for=\"item in orderedSlides\"\n          :key=\"item.itemIndex\"\n          ref=\"slidesRef\"\n          @visibility-change=\"(visible) => setSlideVisibility({ visible, index: item.itemIndex, isCopy: item.isCopy })\"\n        >\n          <slot\n            name=\"itemSlot\"\n            :item=\"items[item.itemIndex]\"\n            :index=\"item.itemIndex\"\n            :active=\"item.itemIndex === focusedSlideIndex\"\n          />\n        </RwCarouselItem>\n\n        <template v-if=\"!mocksLoading && centered && mocksCount\">\n          <RwCarouselItemMock\n            v-for=\"index in mocksCount\"\n            :key=\"index\"\n            :style=\"slideStyle\"\n            @visibility-change=\"(visible) => setMockVisibility({ visible, index, position: 'right' })\"\n          />\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.rw-carousel {\n  transition: opacity 0.5s ease-in;\n\n  &__container {\n    position: relative;\n\n    .scroller {\n      /* snap mandatory on horizontal axis  */\n      scroll-snap-type: x mandatory;\n      scroll-behavior: smooth;\n      scroll-padding: 100px;\n\n      overflow-x: auto;\n      overflow-y: hidden;\n\n      display: grid;\n      grid-auto-flow: column;\n\n      /* Enable Safari touch scrolling physics */\n      -webkit-overflow-scrolling: touch;\n\n      padding-bottom: 10px;\n\n      .rw-carousel-item {\n        /* snap align center  */\n        scroll-snap-align: center;\n        scroll-snap-stop: normal;\n        position: relative;\n\n        &:first-of-type {\n          scroll-snap-align: start;\n        }\n\n        &:last-of-type {\n          scroll-snap-align: end;\n        }\n      }\n\n      .rw-carousel-item-mock {\n        scroll-snap-align: start;\n        scroll-snap-stop: normal;\n      }\n    }\n\n    .btn {\n      position: absolute;\n\n      top: 50%;\n      transform: translateY(-50%);\n\n      border-radius: 2px;\n      background-color: rgba(0,0,0,0.5);\n      background-position: 50% 50%;\n      background-repeat: no-repeat;\n\n      z-index: 1;\n\n      &.prev {\n        left: 10px;\n      }\n\n      &.next {\n        right: 10px;\n      }\n    }\n  }\n\n  &__bottom {\n    margin-top: 10px;\n\n    .dots {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n      flex-wrap: wrap;\n\n      &__item {\n        cursor: pointer;\n        width: 20px;\n        height: 20px;\n        border: none;\n        border-radius: 50%;\n        background: lightgray;\n\n        &.active {\n          background: lightgreen;\n        }\n      }\n    }\n  }\n\n  &.vertical {\n    .scroller {\n      scroll-snap-type: y mandatory;\n      overflow-x: hidden;\n      overflow-y: auto;\n      grid-auto-flow: row;\n    }\n  }\n\n  &.hide-scrollbar {\n    .scroller {\n      -ms-overflow-style: none;  /* IE and Edge */\n      scrollbar-width: none;  /* Firefox */\n\n      &::-webkit-scrollbar {\n        display: none;\n      }\n    }\n  }\n\n  &.loading {\n    opacity: 0;\n\n    .scroller {\n      scroll-behavior: unset;\n    }\n  }\n\n  &.centered {\n    .rw-carousel-item {\n      /* snap align center  */\n      scroll-snap-align: start;\n      scroll-snap-stop: normal;\n      position: relative;\n    }\n  }\n}\n</style>\n","import {Canvas, Meta, Story, ArgsTable, Source} from '@storybook/addon-docs';\nimport RwCarousel2 from '../src/components/RwCarousel/RwCarousel2.vue';\nimport {renderComponent} from './utils/renderComponent';\nimport {Types} from \"./utils/componentTypes\";\nimport {getSourceCode} from \"./utils/getSourceCode\";\n\n<Meta\n  title=\"RwCarousel2\"\n  component={RwCarousel2}\n  argTypes={{\n    default: {\n      control: 'text',\n      description: 'Slot to render items in the carousel',\n      table: {\n        type: {summary: Types.String},\n        defaultValue: {summary: undefined},\n      },\n    },\n    prevButtonSlot: {\n      control: false,\n      description: 'Slot to render previous button',\n      table: {\n        type: {summary: Types.Slot},\n        defaultValue: {summary: undefined},\n      },\n    },\n    nextButtonSlot: {\n      control: false,\n      description: 'Slot to render previous button',\n      table: {\n        type: {summary: Types.Slot},\n        defaultValue: {summary: undefined},\n      },\n    },\n  }}\n/>\n\nexport const Template = renderComponent({\n  Component: RwCarousel2,\n  slots: ['itemSlot'],\n});\n\n# RwCarousel\n\nWith `MDX`, we can define a story for `RwCarousel` right in the middle of our\nMarkdown documentation.\n\n<Canvas withSource='none'>\n  <Story\n    name=\"Default\"\n    args={{\n        itemSlot: `<div class=\"colored_card\"> <p>test </p> </div>`,\n        items: new Array(20).fill(1)\n    }}\n  >\n    {Template.bind({})}\n  </Story>\n</Canvas>\n\nexport const DEFAULT_CODE = await getSourceCode('RwCarousel', 'DefaultCode')\n\n<Source\n  language='html'\n  dark\n  format={false}\n  code={DEFAULT_CODE}\n/>\n\n<ArgsTable story=\"Default\"/>\n"],"names":["slidesRef","ref","scrollerElementRef","orderedSlides","visibleSlides","visibleItemsCountWithoutMocks","mocksCount","loading","mocksLoading","leftVisibleMocks","rightVisibleMocks","itemWidth","isFirstSlideVisible","computed","props","focusedSlideIndex","scrollerStyle","offset","gridStyle","cursor","slideStyle","setSlideVisibility","data","__name","setMockVisibility","calculateMocksCount","detectFocusedSlide","useDebounceFn","leftMocks","visibleItems","rightMocks","result","i","item","index","visible","visibleSlideIndex","nextTick","_a","calculateOrderedSlides","slidesArray","itemIndex","slide","onBeforeMount","onMounted","watch","Template","renderComponent","Component","RwCarousel2","slots","DEFAULT_CODE","getSourceCode","layoutProps","MDXLayout","MDXContent","components","mdx","Meta","default","control","description","table","type","summary","Types","String","defaultValue","undefined","prevButtonSlot","Slot","nextButtonSlot","Canvas","Story","itemSlot","items","Array","fill","bind","Source","ArgsTable","isMDXComponent","defaultStory","storyName","args","parameters","storySource","source","componentMeta","title","component","argTypes","includeStories","mdxStoryNameToKey","docs","page","AddContext","__namedExportsOrder"],"mappings":"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"}