var M=Object.defineProperty;var u=(o,t)=>M(o,"name",{value:t,configurable:!0});import"./jsx-runtime.a2804bc8.js";import{c as a,A as D,C as R,S as N,M as A,a as B,b as E}from"./Props.563b9adf.js";import"./iframe.cbbce5ea.js";import{o as b,f as y,r as i,d as k,g as O,v as $,u as d,i as C,j as V,k as _,w as L,n as I,l as X}from"./vue.esm-bundler.c233ec7d.js";import{u as w}from"./index.d3dc3332.js";import{_ as j}from"./_plugin-vue_export-helper.cdc0426e.js";import{r as P,g as U,T as l}from"./getSourceCode.7f7040d0.js";import"./string.b6e6bac9.js";import"./es.map.constructor.b084747e.js";import"./es.number.to-fixed.1943b2da.js";const S={},q={class:"rw-checkbox-label"};function F(o,t){return b(),y("span",q,[i(o.$slots,"default")])}u(F,"_sfc_render");const K=j(S,[["render",F]]);S.__docgenInfo={displayName:"RwCheckboxLabel",description:"",tags:{},slots:[{name:"default"}]};const z={class:"rw-checkbox-input"},W=["checked"],G=C("span",{class:"rw-checkbox-input__checkmark"},null,-1),g=k({__name:"RwCheckboxInput",props:{modelValue:{type:Boolean}},emits:["update:modelValue"],setup(o,{emit:t}){const e=w(o,"modelValue",t);return(m,s)=>(b(),y("span",z,[O(C("input",{"onUpdate:modelValue":s[0]||(s[0]=p=>V(e)?e.value=p:null),checked:d(e),class:"rw-checkbox-input__input",type:"checkbox"},null,8,W),[[$,d(e)]]),G]))}});g.__docgenInfo={exportName:"default",displayName:"RwCheckboxInput",description:"",tags:{},props:[{name:"modelValue",required:!0,type:{name:"boolean"}}],events:[{name:"update:modelValue",type:{names:["boolean"]}}]};const H={class:"rw-checkbox"},c=k({__name:"RwCheckbox",props:{modelValue:{type:Boolean}},emits:["update:modelValue"],setup(o,{emit:t}){const e=w(o,"modelValue",t);return(m,s)=>(b(),y("label",H,[i(m.$slots,"contentSlot",I(X({modelValue:d(e)})),()=>[_(g,{modelValue:d(e),"onUpdate:modelValue":s[0]||(s[0]=p=>V(e)?e.value=p:null)},null,8,["modelValue"]),_(K,null,{default:L(()=>[i(m.$slots,"default")]),_:3})])]))}});c.__docgenInfo={exportName:"default",displayName:"RwCheckbox",description:"",tags:{},props:[{name:"modelValue",required:!0,type:{name:"boolean"}}],events:[{name:"update:modelValue",type:{names:["boolean"]}}],slots:[{name:"contentSlot",scoped:!0,bindings:[{name:"modelValue",title:"binding"}]},{name:"default"}]};function f(){return f=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(o[e]=n[e])}return o},f.apply(this,arguments)}u(f,"_extends");const x=P({Component:c,slots:["default","contentSlot"],vModels:["modelValue"]}),v=await U("RwCheckbox","DefaultCode"),J={Template:x,DEFAULT_CODE:v},Q="wrapper";function T({components:o,...t}){return a(Q,f({},J,t,{components:o,mdxType:"MDXLayout"}),a(A,{title:"RwCheckbox",component:c,argTypes:{contentSlot:{control:!1,description:"Slot to replace all checkbox content. Allows you to build your own checkbox",table:{type:{summary:l.Slot},defaultValue:{summary:void 0}}},default:{control:"text",description:"Slot to render checkbox label",table:{type:{summary:l.Slot},defaultValue:{summary:void 0}}},modelValue:{control:"boolean",description:"Value of checkbox",table:{type:{summary:l.Boolean}}},"update:modelValue":{control:!1,description:"Model value update event",table:{type:{summary:"(value: boolean) => void"}}}},mdxType:"Meta"}),a("h1",null,"RwCheckbox"),a("p",null,"With ",a("inlineCode",{parentName:"p"},"MDX"),", we can define a story for ",a("inlineCode",{parentName:"p"},"RwCheckbox"),` right in the middle of our
Markdown documentation.`),a(R,{withSource:"none",mdxType:"Canvas"},a(N,{name:"Default",args:{default:"Checkbox",modelValue:!1},mdxType:"Story"},x.bind({}))),a(B,{language:"html",dark:!0,format:!1,code:v,mdxType:"Source"}),a(E,{story:"Default",mdxType:"ArgsTable"}))}u(T,"MDXContent");T.isMDXComponent=!0;const h=x.bind({});h.storyName="Default";h.args={default:"Checkbox",modelValue:!1};h.parameters={storySource:{source:`renderComponent({
  Component: RwCheckbox,
  slots: ['default', 'contentSlot'],
  vModels: ['modelValue']
})`}};const r={title:"RwCheckbox",component:c,argTypes:{contentSlot:{control:!1,description:"Slot to replace all checkbox content. Allows you to build your own checkbox",table:{type:{summary:l.Slot},defaultValue:{summary:void 0}}},default:{control:"text",description:"Slot to render checkbox label",table:{type:{summary:l.Slot},defaultValue:{summary:void 0}}},modelValue:{control:"boolean",description:"Value of checkbox",table:{type:{summary:l.Boolean}}},"update:modelValue":{control:!1,description:"Model value update event",table:{type:{summary:"(value: boolean) => void"}}}},includeStories:["defaultStory"]},Y={Default:"defaultStory"};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>a(D,{mdxStoryNameToKey:Y,mdxComponentAnnotations:r},a(T,null))};const ce=["Template","DEFAULT_CODE","defaultStory"];export{v as DEFAULT_CODE,x as Template,ce as __namedExportsOrder,r as default,h as defaultStory};
//# sourceMappingURL=RwCheckbox.stories.fadc200c.js.map
