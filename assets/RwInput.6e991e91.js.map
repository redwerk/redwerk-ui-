{"version":3,"mappings":"4dACAA,EAAe,CACb,aAAc,EAChB,+TAQMC,EAASC,EAAqB,IAAMC,aAAO,wBAAuB,qEAmClEC,EAAWC,IAEXC,EAAYD,EAAI,EAAK,EAErBE,EAAmBC,EAAS,IAAMC,EAAM,WAAa,QAAQ,OAAOA,EAAM,UAAU,EAAE,MAAM,CAAC,EAE7FC,EAAgBF,EAAS,IACzB,MAAM,QAAQC,EAAM,MAAM,EACrBA,EAAM,OAGR,CAACA,EAAM,MAAM,CACrB,EAED,SAASE,EAAiBC,EAAY,EAChCH,EAAM,OAAS,UAAYA,EAAM,YAAc,aACjDG,EAAQ,OAAOA,CAAK,EACjB,QAAQ,WAAY,EAAE,EACtB,QAAQ,eAAgB,IAAI,EAC5B,QAAQ,SAAU,GAAG,GAGtBR,EAAS,QACXA,EAAS,MAAM,MAAQQ,GAGzBC,EAAK,oBAAqBD,CAAK,CACjC,CAbSE,wBAeT,SAASC,EAAQC,EAA2B,OACpC,SAAQC,IAAM,SAAN,cAAc,MAC5BN,EAAiBC,CAAK,EACtBC,EAAK,QAASG,CAAK,CACrB,CAJSF,eAMT,SAASI,EAAQF,EAAmB,CAClCV,EAAU,MAAQ,GAClBO,EAAK,QAASG,CAAK,CACrB,CAHSF,eAKT,SAASK,EAAOH,EAAmB,CACjCV,EAAU,MAAQ,GAClBO,EAAK,OAAQG,CAAK,CACpB,CAHSF,cAKT,SAASM,GAAa,CAChBhB,EAAS,OACXA,EAAS,MAAM,OAEnB,CAJSU,kBAMT,SAASO,GAAa,CACpBV,EAAiB,EAAE,EAERS,GACb,CAJS,yBAMIE,GACX,MAAOF,EACR","names":["__default__","RwIcon","defineAsyncComponent","__vitePreload","inputRef","ref","isFocused","canShowClearable","computed","props","visibleErrors","updateModelValue","value","emit","__name","onInput","event","_a","onFocus","onBlur","focusInput","clearInput","expose"],"sources":["../../src/components/RwInput/RwInput.vue"],"sourcesContent":["<script lang=\"ts\">\nexport default {\n  inheritAttrs: false,\n};\n</script>\n\n<script setup lang=\"ts\">\nimport {\n  computed, defineAsyncComponent, ref,\n} from 'vue';\n\nconst RwIcon = defineAsyncComponent(() => import('../RwIcon/RwIcon.vue'));\n\ntype ExtendedInputEvent = InputEvent & {\n  target: {\n    value: string,\n  }\n};\n\ninterface Props {\n  modelValue: any,\n  clearable?: boolean,\n  name?: string,\n  type?: string,\n  inputmode?: string,\n  required?: boolean,\n  errors?: string | string[]\n}\nconst props = withDefaults(defineProps<Props>(), {\n  modelValue: undefined,\n  type: 'text',\n  clearable: false,\n  name: undefined,\n  inputmode: undefined,\n  required: false,\n  errors: () => [],\n});\ninterface Emits {\n  (e: 'update:modelValue', value: any): void;\n  (e: 'input', event: InputEvent): void;\n  (e: 'focus', event: FocusEvent): void;\n  (e: 'blur', event: FocusEvent): void;\n\n}\nconst emit = defineEmits<Emits>();\n\nconst inputRef = ref<HTMLInputElement>();\n\nconst isFocused = ref(false);\n\nconst canShowClearable = computed(() => props.clearable && Boolean(String(props.modelValue).length));\n\nconst visibleErrors = computed(() => {\n  if (Array.isArray(props.errors)) {\n    return props.errors;\n  }\n\n  return [props.errors];\n});\n\nfunction updateModelValue(value: any) {\n  if (props.type === 'number' || props.inputmode === 'numeric') {\n    value = String(value)\n      .replace(/[^0-9.]/g, '')\n      .replace(/(\\..*?)\\..*/g, '$1')\n      .replace(/^0[^.]/, '0');\n  }\n\n  if (inputRef.value) {\n    inputRef.value.value = value;\n  }\n\n  emit('update:modelValue', value);\n}\n\nfunction onInput(event: ExtendedInputEvent) {\n  const value = event.target?.value;\n  updateModelValue(value);\n  emit('input', event);\n}\n\nfunction onFocus(event: FocusEvent) {\n  isFocused.value = true;\n  emit('focus', event);\n}\n\nfunction onBlur(event: FocusEvent) {\n  isFocused.value = false;\n  emit('blur', event);\n}\n\nfunction focusInput() {\n  if (inputRef.value) {\n    inputRef.value.focus();\n  }\n}\n\nfunction clearInput() {\n  updateModelValue('');\n\n  focusInput();\n}\n\ndefineExpose({\n  focus: focusInput,\n});\n</script>\n\n<template>\n  <div\n    :class=\"[\n      'rw-input',\n      {\n        focused: isFocused,\n        required,\n        invalid: visibleErrors.length,\n      },\n    ]\"\n  >\n    <label\n      v-if=\"$slots.labelSlot\"\n      class=\"label-slot\"\n      :for=\"name\"\n    >\n      <slot name=\"labelSlot\" /><slot\n        v-if=\"required\"\n        name=\"requiredSlot\"\n      ><span class=\"label-required\">*</span></slot>\n    </label>\n\n    <div class=\"container\">\n      <div\n        :class=\"['field-container', {\n          'has-before': $slots.beforeSlot,\n          'has-after': $slots.afterSlot,\n          'has-before-after': $slots.beforeSlot && $slots.afterSlot,\n        }]\"\n      >\n        <div\n          v-if=\"$slots.beforeSlot\"\n          class=\"before-slot\"\n        >\n          <slot name=\"beforeSlot\" />\n        </div>\n\n        <input\n          class=\"field\"\n          v-bind=\"$attrs\"\n          ref=\"inputRef\"\n          :name=\"name\"\n          :value=\"modelValue\"\n          :required=\"required\"\n          @input=\"onInput\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n        >\n\n        <div\n          v-if=\"$slots.afterSlot\"\n          class=\"after-slot\"\n        >\n          <slot name=\"afterSlot\" />\n        </div>\n\n        <slot\n          v-if=\"canShowClearable\"\n          name=\"clearableSlot\"\n          :clear=\"clearInput\"\n        >\n          <button\n            class=\"clear-button\"\n            type=\"button\"\n            @click=\"clearInput\"\n          >\n            <RwIcon name=\"mdi:close\" />\n          </button>\n        </slot>\n      </div>\n\n      <div\n        v-if=\"visibleErrors.length\"\n        class=\"bottom-slot\"\n      >\n        <slot\n          name=\"bottomSlot\"\n          :errors=\"errors\"\n        >\n          <ul>\n            <li\n              v-for=\"(error, index) in visibleErrors\"\n              :key=\"index\"\n            >\n              {{ error }}\n            </li>\n          </ul>\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.rw-input {\n  .label-slot {\n    display: block;\n  }\n\n  .container {\n    .field-container {\n      display: inline-grid;\n      grid-template-columns: auto max-content;\n      align-items: center;\n      width: 100%;\n      border: 1px solid black;\n      transition: border 0.2s ease;\n      box-sizing: border-box;\n\n      .field {\n        border: none;\n        outline: none;\n        font-size: 16px;\n        background: transparent;\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n      .clear-button {\n        border: none;\n        background: none;\n        cursor: pointer;\n        margin-left: 5px;\n        padding: 0;\n        display: grid;\n        place-items: center;\n      }\n\n      .before-slot {\n        margin-right: 5px;\n      }\n\n      .after-slot {\n        margin-left: 5px;\n      }\n\n      &.has-after {\n        grid-template-columns: auto repeat(2, max-content);\n      }\n\n      &.has-before,\n      &.has-before-after {\n        grid-template-columns: max-content auto repeat(2, max-content);\n      }\n    }\n  }\n\n  &.focused {\n    .field-container {\n      border: 1px solid dodgerblue;\n    }\n  }\n\n  &.required {\n    .label-required {\n      color: red;\n    }\n  }\n\n  &.invalid {\n    .field-container {\n      border: 1px solid red;\n    }\n  }\n}\n</style>\n"],"file":"assets/RwInput.6e991e91.js"}